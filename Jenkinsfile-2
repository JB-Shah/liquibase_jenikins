pipeline {
  agent {
    docker { image 'liquibase/liquibase:4.4.2' }
  }
  parameters {
    string(name: 'commit_sha', description: 'Commit hash to checkout', defaultValue: '')
  }
  stages {
    stage("Checkout Specific Commit") {
      steps {
        script {
          def scmVars

          if (params.commit_sha?.trim()) {
            print "Checking out commit ${params.commit_sha}"

            // Checkout specific commit
            scmVars = checkout([$class: 'GitSCM', 
                                branches: [[name: params.commit_sha]], 
                                userRemoteConfigs: [[url: scm.userRemoteConfigs[0].url]],
                                extensions: [[$class: 'CheckoutOption', timeout: 10]]])
          } else {
            print "Checking out master"

            // Checkout default branch (master)
            scmVars = checkout(scm)
          }
        }
      }
    }
    stage('Status') {
      steps {
        sh 'liquibase status --url="jdbc:postgresql://172.17.0.1:5432/liquibase_db" --driver=org.postgresql.Driver --changeLogFile=./root_changelog.xml --username=admin --password=admin'
      }
    }
    stage('Update') {
      steps {
        sh 'liquibase update --url="jdbc:postgresql://172.17.0.1:5432/liquibase_db" --driver=org.postgresql.Driver --changeLogFile=./root_changelog.xml --username=admin --password=admin'
      }
    }
  }
  post {
    always {
      cleanWs()
    }
  }
}
