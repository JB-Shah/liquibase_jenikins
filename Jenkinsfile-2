node {
    stage("Configuring git") {
      print "Hi!"

      if (params.commit_sha?.trim()) {
        print "Checking out commit ${commit_sha}"

        scmVars = checkout([
          $class: 'GitSCM',
          branches: scm.branches,
          extensions: scm.extensions,
          userRemoteConfigs: scm.userRemoteConfigs
        ])
      } else {
        print "Checking out master"

        scmVars = checkout([
          $class: 'GitSCM',
          branches: [[name: params.commit_sha]],
          userRemoteConfigs: scm.userRemoteConfigs
        ])
      }
    }
  }

pipeline {
  agent {
    docker { image 'liquibase/liquibase:4.4.2' }
  }

  stages {

    stage('Status') {
      steps {
        sh 'liquibase status --url="jdbc:postgresql://172.17.0.1:5432/liquibase_db" --driver=org.postgresql.Driver --changeLogFile=./root_changelog.xml --username=${params.username} --password=${params.password}'
      }
    }
    stage('Update') {
      steps {
        sh 'liquibase update --url="jdbc:postgresql://172.17.0.1:5432/liquibase_db" --driver=org.postgresql.Driver --changeLogFile=./root_changelog.xml --username=${params.username} --password=${params.password}'
      }
    }
  }
  post {
    always {
      cleanWs()
    }
  }
}